plugins {
    id 'org.springframework.boot' version '2.5.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation ('org.springframework.boot:spring-boot-starter-test'){
        exclude group: 'org.junit.vintage' , module: 'junit-vintage-engine'
    }
    implementation 'org.mariadb.jdbc:mariadb-java-client:2.7.0'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time'
    implementation 'com.querydsl:querydsl-jpa'
}

test {
    useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

querydsl{
    jpa = true
    querydslSourcesDir = querydslDir
}

sourceSets{
    main.java.srcDir querydslDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}


//def querydslDirectory = "src/main/generated"
//querydsl {
//    library = "com.querydsl:querydsl-apt"
//    jpa = true
//    querydslDefault = true
//    querydslSourcesDir = querydslDirectory
//}
//
//sourceSets {
//    main.java.srcDirs += [ querydslDirectory ]
//}
//
//compileQuerydsl {
//    options.annotationProcessorPath = configurations.querydsl
//}
//
///**
// *  compileQuerydsl.doFirst 추가
// */
//compileQuerydsl.doFirst {
//    if ( file(querydslDirectory).exists )
//        delete(file(querydslDirectory))
//}
///**
// *  compileQuerydsl.doFirst end
// */
//
//tasks.withType(JavaCompile) {
//    options.generatedSourceOutputDirectory = file(querydslDirectory)
//}
//
//clean.doLast {
//    delete file(querydslDirectory)
//}